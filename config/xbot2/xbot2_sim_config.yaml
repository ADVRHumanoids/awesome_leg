# XBot2 Awesome Leg configuration file. To be used during simulation (to hal config and ethercat plugins).

XBotInterface:
  urdf_path: $(rospack find awesome_leg)/description/urdf/generated/awesome_leg.urdf
  srdf_path: $(rospack find awesome_leg)/description/srdf/awesome_leg.srdf

ModelInterface:
  model_type: RBDL
  is_model_floating_base: false

## XBot2 related configuration

# describe the robot hardware in terms of devices
xbotcore_devices:

    joint_gz:
        names: [__joint_srdf__]  # autodetect joints from gazebo
        thread: rt_main  # allocate this device on rt_main thread

    joint_master:
        master: true  # this is a master device for all 'joint' devices
        thread: rt_main

# define threads to be created
xbotcore_threads:
    rt_main:  {sched: fifo , prio: 60, period: 0.001, core_id: 2}
    nrt_main: {sched: other, prio: 0 , period: 0.005}


# define plugins to be loaded
xbotcore_plugins:

    # this plugin is shipped with xbot2, and it generates the
    # ROS api for the framework
    # it is not designed to be real-time safe, so it must executed
    # inside a thread with `other` priority
    ros_io: {thread: nrt_main, type: ros_io}

    # the ros_control plugin forwards all references received on the
    # ROS topic /xbotcore/command to the motors
    ros_control: {thread: nrt_main, type: ros_control}


    # notice that you can reuse the same plugin, by providing
    # different names and possibly different parameters
    homing:
        thread: rt_main
        type: homing_example
        params:
            time: {value: 3.0, type: double}


# additional parameters that don't relate to any plugin 
xbotcore_param:
    /jm/tx_filter_autostart: {value: false, type: bool}  # autostart joint filter
    /jm/tx_filter_cutoff: {value: 2.0, type: double}    # set default filter bandwidth
    /jm/enable_safety: {value: false, type: bool}  # safety checks (can be disabled in running a simulation. DO NOT DO THIS ON A REAL PROTOTYPE)
    /xbot_internal/ros_io/call_timeout: {value: 1.0, type: chrono}
    /rt_slow/memory_hooks: {value: false, type: bool}
        
        
