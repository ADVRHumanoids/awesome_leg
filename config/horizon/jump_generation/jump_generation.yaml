#******************** UP TO APEX OPTIMIZATION ********************#

up2apex_gen:

  i_q_estimation:

    tanh_coeff: 20 # used by the continous iq estimation model

  sliding_guide_friction:

    kd: 0.0 # estimation of the dynamic friction coefficient on the sliding guide

  resampling: 

    dt: 0.001 # dt at which the trajectory is resampled (and refined)

  problem:

    n_int: 100

    takeoff_node: 59

    dt_lb: 0.001
    dt_ub: 0.01

    # q_p_touchdown_conf: [-0.8, -0.9]
    q_p_touchdown_conf: [-0.8, -1.3]

    q_p_retraction_conf: [-1.0, -1.5]
    
    jnt_limit_margin: 0.04 # the actual imposed jnt limit will be reduced by this amount
    jnt_vel_limit_margin: 0.05

    is_iq_cnstrnt: true # whether to use the iq constraint or not
    is_friction_cone: true # whether to use a friction constraint or not

    is_sliding_guide_friction: false # whether to use the sliding guide estimation of friction

    friction_cnstrnt: 
      mu_friction_cone: 0.6

    weights: 

      use_same_weights: false 
      
      ig_generation:

        scale_factor_costs_base: 1 # scale factor for costs (other scalings are applied internally)
        
        weight_f_contact: 0.01 # cost for penalizing contact forces
        weight_f_contact_diff: 0.1 # cost for penalizing differences between successive f_contacts
        weight_jnt_input: 0.01 # cost for penalizing joint accelerations (which are the input)
        weight_jnt_input_diff: 0.05 # cost for penalizing differences between successive inputs

        weight_q_p_dot: -1
        weight_q_dot_diff: -1

        weight_com_term_vel: -1
        weight_com_vel: -1
        weight_tip_under_hip: -1

        weight_hip_height: -1
        weight_tip_clearance: -1

        weight_max_leg_retraction: -1

        weight_sat_i_q: -1 # try to saturate the joint current, while keeping it within bounds

        weight_com_vel_vert_at_takeoff: -1 # try to keep vertical CoM at takeoff

        weight_com_pos: 30000 # maximize terminal com pos at the end of the horizon

        weight_max_touchdown_travel: 1000

      refinement:

        scale_factor_costs_base: 1 # scale factor for costs (other scalings are applied internally)
        
        weight_f_contact: 0.01 # cost for penalizing contact forces
        weight_f_contact_diff: 10 # cost for penalizing differences between successive f_contacts
        weight_jnt_input: 0.01 # cost for penalizing joint accelerations (which are the input)
        weight_jnt_input_diff: 0.05 # cost for penalizing differences between successive inputs

        weight_q_p_dot: -1
        weight_q_dot_diff: -1

        weight_com_term_vel: -1
        weight_com_vel: -1
        weight_tip_under_hip: -1

        weight_hip_height: -1
        weight_tip_clearance: -1

        weight_max_leg_retraction: -1

        weight_sat_i_q: -1 # try to saturate the joint current, while keeping it within bounds

        weight_com_vel_vert_at_takeoff: -1 # try to keep vertical CoM at takeoff

        weight_com_pos: 10000 # maximize terminal com pos at the end of the horizon

        weight_max_touchdown_travel: 1000 

        ig_tracking:
          
          weight_q_tracking: 10

          weight_tip_tracking: -1


  solver:

    ipopt_tol: 0.000001
    ipopt_maxiter: 10000
    ipopt_cnstr_viol_tol: 0.000001 # 1e-6 is a reasonable value for accurate results
    ipopt_lin_solver: "ma57"  # "ma57"
    name: "ipopt" # "ilqr"

  transcription:
    name: "multiple_shooting"
    integrator_name: "RK4"

