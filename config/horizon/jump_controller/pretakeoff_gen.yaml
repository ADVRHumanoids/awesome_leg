# YAML config file associated with jump_generation.py script.

horizon:
 
  xacro_path: $(find awesome_leg)/description/urdf/awesome_leg_test_rig.urdf.xacro # urdf relative path (wrt to the package)
  
  urdf_path: $(find awesome_leg)/description/urdf/generated/awesome_leg_test_rig.urdf

  urdf_name: awesome_leg_test_rig

  is_calibrated: false
  
  opt_results_path: $(find awesome_leg)/opt_results/horizon_jump/results # where optimization .mat files are saved

  refine_path: $(find awesome_leg)/opt_results/horizon_jump/results/05_08_2022-14_21_43

  replay_trajectory: true # whether to replay the optimized trajectory on RViz or not

  resample_traj: true
  
  horizon_solver:
  
    sol_mat_name: "awesome_jump" # name of custom mat file where results will be saved

    ref_sol_mat_name: "awesome_jump_ref"
      
    is_refine_phase: false # whether to use the initial guess or not
  
    opt_init_name: "awesome_jump_init" # name of the initial guess to be loaded (will be searched in opt_results_path)
  
    problem_settings:  

      n_nodes: 100 # number of nodes

      mu_friction_cone : 0.5 # friction cone coefficient

      dt_lb: 0.005
      dt_ub: 0.1

      is_iq_cnstrnt : true

      jnt_limit_margin: 0.02 # [rad] --> this value will shorten the limits of the joint (uniformly) for safety reasons
      jnt_vel_limit_margin : 0.05 # percentage, from 0.0 to 1.0; joint vel limits are restricted by jnt_vel_limit_margin * q_dot_lim

      solver:
        name: "ipopt"
        tolerance: 0.000001
        max_iter: 1000
        cnstrnt_tolerance: 0.0000001
        linear_solver_name: "ma57" 
  
      transcription:
        name: "multiple_shooting" # options: "multiple_shooting", "direct_collocation"
        integrator: "RK4"
      
      cost_weights:

        scale_factor_costs_base: 10000000 # scale factor for costs (other scalings are applied internally)

        contact_force: 0.0000000000000000000001 # cost for penalizing contact forces
        weight_tau: 0.01 # cost for penalizing joint accelerations (which are the input)
        weight_min_f_contact_diff: 0.01 # cost for penalizing differences between successive f_contacts
        weight_min_input_diff: 0.01  # cost for penalizing differences between successive inputs
        weight_com_height: 1
        big_hip_jump: 0.0000000000000000000001
        big_foot_tip_clearance: 0.0000000000000000000001
    