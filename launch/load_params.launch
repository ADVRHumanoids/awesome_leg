<launch>

  <arg name="task_type" default="jump" /> <!-- task of which to load arguments. Allowed values: "jump", "trot" -->
  <arg name="trot_type" default="fixed_hip" /> <!-- trot type to be solved. Allowed values: "sliding_hip", "sliding_all" -->

  <!-- loading some useful actuators parameters-->
  <rosparam command="load" file="$(find awesome_leg_pholus)/config/actuators.yaml" /> 
  
  <!-- Switching between task types and the associated parameters-->
  <group if="$(eval (arg('task_type')=='jump') or (arg('task_type')=='trot'))">

    <group if="$(eval arg('task_type')=='jump')">
      <!-- loading some horizon solver parameters-->
      <rosparam command="load" file="$(find awesome_leg_pholus)/config/horizon_jump.yaml" /> 
      <param name="horizon/task_type" type="string" value="jump" />
    </group>

    <group if="$(eval arg('task_type')=='trot')">
      <!-- Assigning the argument to the ROS param. server -->
      <param name="horizon/task_type" type="string" value="trot" />

      <group if="$(eval arg('trot_type')=='fixed_hip')">
        <param name="horizon/trot_type" type="string" value="fixed_hip" />
        <rosparam command="load" file="$(find awesome_leg_pholus)/config/horizon_trot_fixed_hip.yaml" /> 
      </group>

      <group if="$(eval arg('trot_type')=='sliding_hip')">
        <param name="horizon/trot_type" type="string" value="sliding_hip" />
        <rosparam command="load" file="$(find awesome_leg_pholus)/config/horizon_trot_sliding_hip.yaml" /> 
      </group>

      <group if="$(eval arg('trot_type')=='sliding_all')">
        <param name="horizon/trot_type" type="string" value="sliding_all" />
        <rosparam command="load" file="$(find awesome_leg_pholus)/config/horizon_trot_sliding_all.yaml" /> 
      </group>

      <group if="$(eval arg('trot_type')=='sliding_all_underact')">
        <param name="horizon/trot_type" type="string" value="sliding_all" />
        <rosparam command="load" file="$(find awesome_leg_pholus)/config/horizon_trot_sliding_all_underact.yaml" /> 
      </group>

    </group>

  </group>

  <node name="relative_path_setter" pkg="awesome_leg_pholus" type="relative_path_setter.py" output="screen">
    <param name="publish_default_efforts" value="True"/>
  </node>
  

</launch>